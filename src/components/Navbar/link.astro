---
interface Props {
    title?: string;
    pages: string[];
}

const { title, pages } = Astro.props;
const path = Astro.url.pathname;
const single = pages.length === 1;

function isActive(page: string) {
    if (page === "" || page === "/") {
        return path === "/";
    }
    return path.startsWith(`/${page}`);
}
---

{
    title ? (
        single ? (
            <li class="page element">
                <a
                    href={pages[0] === "" ? "/" : `/${pages[0]}`}
                    class={isActive(pages[0]) ? "active" : ""}
                >
                    {title}
                </a>
            </li>
        ) : (
            <li class="element">
                {title}
                <ul class="collection">
                    {pages.map((page) => (
                        <li class="page">
                            <a
                                href={page === "" ? "/" : `/${page}`}
                                class={isActive(page) ? "active" : ""}
                            >
                                {page || "home"}
                            </a>
                        </li>
                    ))}
                </ul>
            </li>
        )
    ) : (
        <>
            {pages.map((page) => (
                <li class="page element">
                    <a
                        href={page === "" ? "/" : `/${page}`}
                        class={isActive(page) ? "active" : ""}
                    >
                        {page || "home"}
                    </a>
                </li>
            ))}
        </>
    )
}

<style>
    .element {
        margin-bottom: 1em;
    }

    .collection {
        margin-left: 0.5em;
    }

    .page {
        margin-top: 0.3em;

        .active {
            font-weight: bold;
        }

        :hover {
            text-decoration: underline;
        }
    }
</style>
