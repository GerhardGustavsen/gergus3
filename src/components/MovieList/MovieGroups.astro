---
import PostList from "./MovieList.astro";

interface Props {
    media: any[];
    groupBy?: string | string[]; // can be string or array
    favorites?: boolean; // show favorites section or not
}

const { media, groupBy = ["year", "genre"], favorites = true } = Astro.props;

// Normalize to an array and set defaults
const groupKeys: string[] = Array.isArray(groupBy)
    ? groupBy.length
        ? groupBy
        : ["director", "year", "genre"]
    : groupBy
      ? [groupBy]
      : ["director", "year", "genre"];

// Use the first key for actual grouping
const groupKey = groupKeys[0];

function fm(post: any) {
    return post.frontmatter ?? post.data ?? {};
}

function cmpMovies(a: any, b: any) {
    const fa = fm(a);
    const fb = fm(b);
    const ra = fa.rating ?? 0;
    const rb = fb.rating ?? 0;
    if (ra !== rb) return rb - ra;
    const ya = Number(fa.year ?? 0);
    const yb = Number(fb.year ?? 0);
    return yb - ya;
}

// Favorites (only if enabled)
const favs = favorites ? media.filter((p) => !!fm(p).favorite) : [];

// Group by chosen key
const buckets = new Map<string, any[]>();
for (const post of media) {
    const f = fm(post);
    const keyRaw = f[groupKey];
    const key =
        keyRaw == null || keyRaw === ""
            ? `Unknown ${groupKey}`
            : String(keyRaw);
    if (!buckets.has(key)) buckets.set(key, []);
    buckets.get(key)!.push(post);
}

// Sort inside each bucket
for (const [, arr] of buckets) arr.sort(cmpMovies);

// Sort group keys (case-insensitive)
const groups = Array.from(buckets.keys()).sort((a, b) =>
    a.toLowerCase().localeCompare(b.toLowerCase()),
);
---

<>
    {
        favorites && favs.length > 0 && (
            <PostList posts={favs} title="My all time favorites:" />
        )
    }

    {/* Buttons generated from groupKeys; no behavior yet */}
    <div class="groupby-buttons" aria-label="Group by">
        {
            groupKeys.map((k) => (
                <button type="button" class="groupby-btn" data-key={k} key={k}>
                    {k}
                </button>
            ))
        }
    </div>

    {
        groups.map((g) => {
            const list = buckets.get(g) ?? [];
            if (list.length === 0) return null;
            return <PostList posts={list} title={g} key={g} />;
        })
    }

    <style>
        .groupby-buttons {
            display: flex;
            gap: 0.5rem;
            margin: 0.75rem 0 1.25rem;
            flex-wrap: wrap;
        }
        .groupby-btn {
            padding: 0.35rem 0.6rem;
            border: 1px solid #888;
            border-radius: 0.4rem;
            background: transparent;
            cursor: default;
        }
    </style>
</>
