---
interface Props {
    keys: string[]; // your groupBy
}

const { keys } = Astro.props;
const show = keys.length > 1;
---

{
    show && (
        <div class="container">
            <div class="titleBox">
                <p class="element title">Group by:</p>
            </div>
            <div class="groupby-buttons">
                {keys.map((k, i) => (
                    <button
                        type="button"
                        class={`groupby-btn element ${i === 0 ? "active" : ""}`}
                        data-key={k}
                    >
                        {k}
                    </button>
                ))}
            </div>
        </div>
    )
}

<style>
    .container {
        padding: 0em 3em 3em 3em;
        display: flex;
        justify-content: center;

        .titleBox {
            display: flex;
            flex-direction: column;
            justify-content: center;
            .title {
                font-weight: bold;
                text-wrap: nowrap;
            }
        }

        .element {
            display: inline;
            padding-right: 1em;
            font-size: 1.2em;
        }
        .groupby-btn {
            color: var(--color-accent);
            cursor: pointer;
        }
        .groupby-btn.active {
            font-weight: bold;
        }
        .groupby-btn:hover {
            text-decoration: underline;
        }
    }
</style>

<script is:inline>
    const root = document.querySelector(".groupby-buttons");
    if (root) {
        root.addEventListener("click", (e) => {
            const btn = e.target.closest("button.groupby-btn");
            if (!btn) return;

            // toggle active class locally
            root.querySelectorAll("button.groupby-btn").forEach((b) =>
                b.classList.toggle("active", b === btn),
            );

            // notify parent which key was chosen
            root.dispatchEvent(
                new CustomEvent("groupby-change", {
                    bubbles: true,
                    detail: { key: btn.dataset.key },
                }),
            );
        });
    }
</script>
